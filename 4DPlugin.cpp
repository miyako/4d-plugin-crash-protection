/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : Crash Protection
 #	author : miyako
 #	2016/12/22
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

void PluginMain(PA_long32 selector, PA_PluginParameters params)
{
	try
	{
		PA_long32 pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (PA_long32 pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
		case kServerInitPlugin :
		case kInitPlugin :
			doIt();
			break;
		case 1 :
			NSFunctionBarAPIEnabled(pResult, pParams);
			break;
			
	}
}

// ------------------------------- Crash Protection -------------------------------

void doIt()
{
	NSUserDefaults *standardUserDefaults = [NSUserDefaults standardUserDefaults];
	
	[standardUserDefaults setBool:NO forKey:@"NSFunctionBarAPIEnabled"];
	[standardUserDefaults synchronize];
}

void NSFunctionBarAPIEnabled(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_TEXT returnValue;

	NSUserDefaults *standardUserDefaults = [NSUserDefaults standardUserDefaults];

	NSString *value = [NSString stringWithFormat:@"%@", [standardUserDefaults boolForKey:@"NSFunctionBarAPIEnabled"] ? @"YES" : @"NO"];
	
	returnValue.setUTF16String(value);;
	returnValue.setReturn(pResult);
}